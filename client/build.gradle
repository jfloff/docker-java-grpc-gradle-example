plugins {
  // Provide convenience executables for trying out the examples.
  id 'application'
  id 'com.google.protobuf' version '0.9.4'
  // Generate IntelliJ IDEA's .idea & .iml project files
  id 'idea'
  // Generate uber jar
  id 'com.github.johnrengelman.shadow' version '6.0.0'
}

repositories {
  mavenCentral()
  mavenLocal()
}

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}
archivesBaseName = 'client'
version = '0.0.1-SNAPSHOT'
mainClassName = 'pt.inescid.dpss.Client'

// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.65.1'
def protobufVersion = '3.25.3'
def protocVersion = protobufVersion

dependencies {
  implementation "io.grpc:grpc-protobuf:${grpcVersion}"
  implementation "io.grpc:grpc-services:${grpcVersion}"
  implementation "io.grpc:grpc-stub:${grpcVersion}"
  compileOnly "org.apache.tomcat:annotations-api:6.0.53"

  // examples/advanced need this for JsonFormat
  implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

  runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
}

protobuf {
  protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
  }
  generateProtoTasks {
    all()*.plugins { grpc {} }
  }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
  main {
    java {
      srcDirs 'build/generated/source/proto/main/grpc'
      srcDirs 'build/generated/source/proto/main/java'
    }
  }
}

// Shadow task depends on Jar task, so these configs are reflected for Shadow as well
jar {
  manifest.attributes['Main-Class'] = mainClassName
}

// Merging Service Files
shadowJar {
  mergeServiceFiles()
}